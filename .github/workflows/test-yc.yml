name: Run backtest on YC runner
on: workflow_dispatch
jobs:
  start-runner:
    name: Start self-hosted YC runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-yc-runner.outputs.label }}
      instance-id: ${{ steps.start-yc-runner.outputs.instance-id }}
    steps:
      - name: Start YC runner
        id: start-yc-runner
        uses: yc-actions/yc-github-runner@v1
        with:
          mode: start
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          folder-id: b1gjlg0k44jithii3vbo
          image-id: fd8t8aegi1vlprds4i4h
          cores: 4
          memory: 16GB
          core-fraction: 100
          subnet-id: e9bmi6q254rcj8rego57
  do-the-job:
    name: Do the job on the runner
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    env:
      STABLE_TAG: sand1k/zipline-backtest-img:latest
      AWS_SERVER_PUBLIC_KEY: ${{ secrets.AWS_SERVER_PUBLIC_KEY }}
      AWS_SERVER_SECRET_KEY: ${{ secrets.AWS_SERVER_SECRET_KEY }}
      NASDAQ_API_KEY: ${{ secrets.NASDAQ_API_KEY }}
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Run backtest
      run: |
        docker run --rm -e AWS_SERVER_PUBLIC_KEY -e AWS_SERVER_SECRET_KEY -e NASDAQ_API_KEY ${{ env.STABLE_TAG }}
  stop-runner:
    name: Stop self-hosted YC runner
    needs:
      - start-runner # required to get output from the start-runner job
      - do-the-job # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Stop YC runner
        uses: yc-actions/yc-github-runner@v1
        with:
          mode: stop
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          instance-id: ${{ needs.start-runner.outputs.instance-id }}
